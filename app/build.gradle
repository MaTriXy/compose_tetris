plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

static String generateBuildTime() {
    return new Date().format("yyyy_MM_dd_HH_mm_ss", TimeZone.getTimeZone('Asia/Shanghai'))
}

android {
    compileSdk compileSdkVersionExt.toInteger()
    buildToolsVersion buildToolsVersionExt.toString()
    defaultConfig {
        applicationId applicationIdExt.toString()
        minSdk minSdkVersionExt.toInteger()
        targetSdk targetSdkVersionExt.toInteger()
        versionCode versionCodeExt.toInteger()
        versionName versionNameExt.toString()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "compose_tetris_${variant.name}_versionCode_${versionCode}_versionName_${versionName}_${generateBuildTime()}.apk"
            }
        }
    }
    signingConfigs {
        releaseConfig {
            storeFile file("..\\key.jks")
            keyAlias keyAliasExt
            storePassword keyPasswordExt
            keyPassword storePasswordExt
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.releaseConfig
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xjvm-default=all",
                "-Xallow-jvm-ir-dependencies",
                "-Xskip-prerelease-check",
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=androidx.compose.animation.ExperimentalAnimationApi",
                "-Xopt-in=androidx.compose.material.ExperimentalMaterialApi",
                "-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi",
                "-Xopt-in=com.google.accompanist.insets.ExperimentalAnimatedInsets",
                "-Xopt-in=com.google.accompanist.pager.ExperimentalPagerApi",
                "-Xopt-in=androidx.compose.material3.ExperimentalMaterial3Api",
        ]
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0-alpha01'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0"
    implementation "androidx.compose.material3:material3:1.0.0-alpha03"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
}